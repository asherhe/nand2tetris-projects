// BOOTSTRAP CODE
@256
D=A
@SP
M=D
// call Sys.init 0
@0
D=A
@SP
D=M-D
@R13
M=D
@retAddr.1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@R13
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(retAddr.1)
// function Class1.set 0
(Class1.set)
@0
D=A
(Class1.set.localLoop)
D=D-1
@Class1.set.continue
D;JLT
@SP
M=M+1
A=M-1
M=0
@Class1.set.localLoop
0;JMP
(Class1.set.continue)
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
M=M+1
A=M-1
M=D
// pop static 0
@Class1.0
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 1
@ARG
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
M=M+1
A=M-1
M=D
// pop static 1
@Class1.1
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R14
M=D
D=A
@R13
M=D
@R13
A=M
D=M
@SP
M=M+1
A=M-1
M=D
// return
@SP
A=M-1
D=M
@R14
M=D
@ARG
D=M+1
@SP
M=D
@LCL
D=M
@R13
AM=D-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R13
A=M-1
D=M
@R13
M=D
@R14
D=M
@SP
A=M-1
M=D
@R13
A=M
0;JMP
// function Class1.get 0
(Class1.get)
@0
D=A
(Class1.get.localLoop)
D=D-1
@Class1.get.continue
D;JLT
@SP
M=M+1
A=M-1
M=0
@Class1.get.localLoop
0;JMP
(Class1.get.continue)
// push static 0
@Class1.0
D=A
@R13
M=D
@R13
A=M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 1
@Class1.1
D=A
@R13
M=D
@R13
A=M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// return
@SP
A=M-1
D=M
@R14
M=D
@ARG
D=M+1
@SP
M=D
@LCL
D=M
@R13
AM=D-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R13
A=M-1
D=M
@R13
M=D
@R14
D=M
@SP
A=M-1
M=D
@R13
A=M
0;JMP
// function Class2.set 0
(Class2.set)
@0
D=A
(Class2.set.localLoop)
D=D-1
@Class2.set.continue
D;JLT
@SP
M=M+1
A=M-1
M=0
@Class2.set.localLoop
0;JMP
(Class2.set.continue)
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
M=M+1
A=M-1
M=D
// pop static 0
@Class2.0
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push argument 1
@ARG
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
M=M+1
A=M-1
M=D
// pop static 1
@Class2.1
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R14
M=D
D=A
@R13
M=D
@R13
A=M
D=M
@SP
M=M+1
A=M-1
M=D
// return
@SP
A=M-1
D=M
@R14
M=D
@ARG
D=M+1
@SP
M=D
@LCL
D=M
@R13
AM=D-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R13
A=M-1
D=M
@R13
M=D
@R14
D=M
@SP
A=M-1
M=D
@R13
A=M
0;JMP
// function Class2.get 0
(Class2.get)
@0
D=A
(Class2.get.localLoop)
D=D-1
@Class2.get.continue
D;JLT
@SP
M=M+1
A=M-1
M=0
@Class2.get.localLoop
0;JMP
(Class2.get.continue)
// push static 0
@Class2.0
D=A
@R13
M=D
@R13
A=M
D=M
@SP
M=M+1
A=M-1
M=D
// push static 1
@Class2.1
D=A
@R13
M=D
@R13
A=M
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// return
@SP
A=M-1
D=M
@R14
M=D
@ARG
D=M+1
@SP
M=D
@LCL
D=M
@R13
AM=D-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R13
A=M-1
D=M
@R13
M=D
@R14
D=M
@SP
A=M-1
M=D
@R13
A=M
0;JMP
// function Sys.init 0
(Sys.init)
@0
D=A
(Sys.init.localLoop)
D=D-1
@Sys.init.continue
D;JLT
@SP
M=M+1
A=M-1
M=0
@Sys.init.localLoop
0;JMP
(Sys.init.continue)
// push constant 6
@6
D=A
@R14
M=D
D=A
@R13
M=D
@R13
A=M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 8
@8
D=A
@R14
M=D
D=A
@R13
M=D
@R13
A=M
D=M
@SP
M=M+1
A=M-1
M=D
// call Class1.set 2
@2
D=A
@SP
D=M-D
@R13
M=D
@retAddr.2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@R13
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.set
0;JMP
(retAddr.2)
// pop temp 0
@5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// push constant 23
@23
D=A
@R14
M=D
D=A
@R13
M=D
@R13
A=M
D=M
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@R14
M=D
D=A
@R13
M=D
@R13
A=M
D=M
@SP
M=M+1
A=M-1
M=D
// call Class2.set 2
@2
D=A
@SP
D=M-D
@R13
M=D
@retAddr.3
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@R13
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.set
0;JMP
(retAddr.3)
// pop temp 0
@5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// call Class1.get 0
@0
D=A
@SP
D=M-D
@R13
M=D
@retAddr.4
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@R13
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.get
0;JMP
(retAddr.4)
// call Class2.get 0
@0
D=A
@SP
D=M-D
@R13
M=D
@retAddr.5
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@R13
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.get
0;JMP
(retAddr.5)
// label WHILE
(null$WHILE)
// goto WHILE
@null$WHILE
0;JMP
